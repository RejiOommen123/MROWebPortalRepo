// <auto-generated />
using System;
using CodeFirstMigration.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MROWebApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200528060539_ChangeCustomerToFacility")]
    partial class ChangeCustomerToFacility
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MROPOC.Context.AdminUser", b =>
                {
                    b.Property<int>("AdminUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("AdminUserId");

                    b.ToTable("AdminUser");

                    b.HasData(
                        new
                        {
                            AdminUserId = 1,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2020, 5, 28, 11, 35, 39, 141, DateTimeKind.Local).AddTicks(3526),
                            Email = "admin@razor-tech.com",
                            Password = "admin",
                            UpdatedBy = 1,
                            UpdatedDate = new DateTime(2020, 5, 28, 11, 35, 39, 143, DateTimeKind.Local).AddTicks(3827)
                        });
                });

            modelBuilder.Entity("MROWebAPI.Context.Facility", b =>
                {
                    b.Property<int>("FacilityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ActiveStatus")
                        .HasColumnType("bit");

                    b.Property<string>("ConfigFileUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FTPPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FTPUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FTPUsername")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacilityAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacilityName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumOfInstitution")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SMTPPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SMTPUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SMTPUsername")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("FacilityId");

                    b.ToTable("Facility");

                    b.HasData(
                        new
                        {
                            FacilityId = 1,
                            ActiveStatus = true,
                            ConfigFileUrl = "https://www.cleveland.com/data",
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2020, 5, 28, 11, 35, 39, 148, DateTimeKind.Local).AddTicks(9609),
                            Description = "Info about Cleveland",
                            FTPPassword = "Cleveland@101",
                            FTPUrl = "ftp://ftp.cleveland.com/",
                            FTPUsername = "Cleveland101",
                            FacilityAddress = "Cleveland",
                            FacilityName = "Cleveland Clinic",
                            NumOfInstitution = "Cleveland Clinic,Cleveland Hospital",
                            SMTPPassword = "Cleveland@101",
                            SMTPUrl = "smtp.cleveland.com",
                            SMTPUsername = "Cleveland101",
                            UpdatedBy = 1,
                            UpdatedDate = new DateTime(2020, 5, 28, 11, 35, 39, 148, DateTimeKind.Local).AddTicks(9666)
                        });
                });

            modelBuilder.Entity("MROWebAPI.Context.Field", b =>
                {
                    b.Property<int>("FieldId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FieldName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedFieldName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WizardId")
                        .HasColumnType("int");

                    b.HasKey("FieldId");

                    b.ToTable("Field");

                    b.HasData(
                        new
                        {
                            FieldId = 1,
                            FieldName = "Selected Location",
                            NormalizedFieldName = "SelectedLocation",
                            WizardId = 2
                        },
                        new
                        {
                            FieldId = 2,
                            FieldName = "Are you Patient",
                            NormalizedFieldName = "NotPatient",
                            WizardId = 3
                        },
                        new
                        {
                            FieldId = 3,
                            FieldName = "Email Id",
                            NormalizedFieldName = "EmailID",
                            WizardId = 4
                        },
                        new
                        {
                            FieldId = 4,
                            FieldName = "Confirm Report",
                            NormalizedFieldName = "ConfirmReport",
                            WizardId = 4
                        },
                        new
                        {
                            FieldId = 5,
                            FieldName = "First Name",
                            NormalizedFieldName = "FName",
                            WizardId = 5
                        },
                        new
                        {
                            FieldId = 6,
                            FieldName = "Middle Initial",
                            NormalizedFieldName = "MInitial",
                            WizardId = 5
                        },
                        new
                        {
                            FieldId = 7,
                            FieldName = "Last Name",
                            NormalizedFieldName = "LName",
                            WizardId = 5
                        },
                        new
                        {
                            FieldId = 8,
                            FieldName = "Is Patient Deceased",
                            NormalizedFieldName = "IsPatientDeceased",
                            WizardId = 5
                        },
                        new
                        {
                            FieldId = 9,
                            FieldName = "Postal Code",
                            NormalizedFieldName = "PostalCode",
                            WizardId = 6
                        },
                        new
                        {
                            FieldId = 10,
                            FieldName = "Street Area",
                            NormalizedFieldName = "StreetArea",
                            WizardId = 7
                        },
                        new
                        {
                            FieldId = 11,
                            FieldName = "Birth Date",
                            NormalizedFieldName = "BDay",
                            WizardId = 8
                        });
                });

            modelBuilder.Entity("MROWebAPI.Context.FieldFacilityMap", b =>
                {
                    b.Property<int>("FieldFacilityMapId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FacilityId")
                        .HasColumnType("int");

                    b.Property<int>("FieldId")
                        .HasColumnType("int");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("bit");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("WizardId")
                        .HasColumnType("int");

                    b.HasKey("FieldFacilityMapId");

                    b.ToTable("FieldFacilityMap");

                    b.HasData(
                        new
                        {
                            FieldFacilityMapId = 1,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2020, 5, 28, 11, 35, 39, 149, DateTimeKind.Local).AddTicks(6356),
                            FacilityId = 1,
                            FieldId = 1,
                            IsEnable = true,
                            UpdatedBy = 1,
                            UpdatedDate = new DateTime(2020, 5, 28, 11, 35, 39, 149, DateTimeKind.Local).AddTicks(6376),
                            WizardId = 2
                        },
                        new
                        {
                            FieldFacilityMapId = 2,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2020, 5, 28, 11, 35, 39, 149, DateTimeKind.Local).AddTicks(6497),
                            FacilityId = 1,
                            FieldId = 2,
                            IsEnable = true,
                            UpdatedBy = 1,
                            UpdatedDate = new DateTime(2020, 5, 28, 11, 35, 39, 149, DateTimeKind.Local).AddTicks(6500),
                            WizardId = 3
                        },
                        new
                        {
                            FieldFacilityMapId = 3,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2020, 5, 28, 11, 35, 39, 149, DateTimeKind.Local).AddTicks(6504),
                            FacilityId = 1,
                            FieldId = 3,
                            IsEnable = true,
                            UpdatedBy = 1,
                            UpdatedDate = new DateTime(2020, 5, 28, 11, 35, 39, 149, DateTimeKind.Local).AddTicks(6507),
                            WizardId = 4
                        },
                        new
                        {
                            FieldFacilityMapId = 4,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2020, 5, 28, 11, 35, 39, 149, DateTimeKind.Local).AddTicks(6510),
                            FacilityId = 1,
                            FieldId = 4,
                            IsEnable = true,
                            UpdatedBy = 1,
                            UpdatedDate = new DateTime(2020, 5, 28, 11, 35, 39, 149, DateTimeKind.Local).AddTicks(6512),
                            WizardId = 4
                        },
                        new
                        {
                            FieldFacilityMapId = 5,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2020, 5, 28, 11, 35, 39, 149, DateTimeKind.Local).AddTicks(6515),
                            FacilityId = 1,
                            FieldId = 5,
                            IsEnable = true,
                            UpdatedBy = 1,
                            UpdatedDate = new DateTime(2020, 5, 28, 11, 35, 39, 149, DateTimeKind.Local).AddTicks(6517),
                            WizardId = 5
                        },
                        new
                        {
                            FieldFacilityMapId = 6,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2020, 5, 28, 11, 35, 39, 149, DateTimeKind.Local).AddTicks(6521),
                            FacilityId = 1,
                            FieldId = 6,
                            IsEnable = true,
                            UpdatedBy = 1,
                            UpdatedDate = new DateTime(2020, 5, 28, 11, 35, 39, 149, DateTimeKind.Local).AddTicks(6523),
                            WizardId = 5
                        },
                        new
                        {
                            FieldFacilityMapId = 7,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2020, 5, 28, 11, 35, 39, 149, DateTimeKind.Local).AddTicks(6526),
                            FacilityId = 1,
                            FieldId = 7,
                            IsEnable = true,
                            UpdatedBy = 1,
                            UpdatedDate = new DateTime(2020, 5, 28, 11, 35, 39, 149, DateTimeKind.Local).AddTicks(6528),
                            WizardId = 5
                        },
                        new
                        {
                            FieldFacilityMapId = 8,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2020, 5, 28, 11, 35, 39, 149, DateTimeKind.Local).AddTicks(6531),
                            FacilityId = 1,
                            FieldId = 8,
                            IsEnable = true,
                            UpdatedBy = 1,
                            UpdatedDate = new DateTime(2020, 5, 28, 11, 35, 39, 149, DateTimeKind.Local).AddTicks(6533),
                            WizardId = 5
                        },
                        new
                        {
                            FieldFacilityMapId = 9,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2020, 5, 28, 11, 35, 39, 149, DateTimeKind.Local).AddTicks(6537),
                            FacilityId = 1,
                            FieldId = 9,
                            IsEnable = true,
                            UpdatedBy = 1,
                            UpdatedDate = new DateTime(2020, 5, 28, 11, 35, 39, 149, DateTimeKind.Local).AddTicks(6539),
                            WizardId = 6
                        },
                        new
                        {
                            FieldFacilityMapId = 10,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2020, 5, 28, 11, 35, 39, 149, DateTimeKind.Local).AddTicks(6542),
                            FacilityId = 1,
                            FieldId = 10,
                            IsEnable = true,
                            UpdatedBy = 1,
                            UpdatedDate = new DateTime(2020, 5, 28, 11, 35, 39, 149, DateTimeKind.Local).AddTicks(6545),
                            WizardId = 7
                        },
                        new
                        {
                            FieldFacilityMapId = 11,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2020, 5, 28, 11, 35, 39, 149, DateTimeKind.Local).AddTicks(6550),
                            FacilityId = 1,
                            FieldId = 11,
                            IsEnable = true,
                            UpdatedBy = 1,
                            UpdatedDate = new DateTime(2020, 5, 28, 11, 35, 39, 149, DateTimeKind.Local).AddTicks(6553),
                            WizardId = 8
                        });
                });

            modelBuilder.Entity("MROWebAPI.Context.Wizard", b =>
                {
                    b.Property<int>("WizardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("WizardName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WizardId");

                    b.ToTable("Wizard");

                    b.HasData(
                        new
                        {
                            WizardId = 1,
                            WizardName = "Wizard-1"
                        },
                        new
                        {
                            WizardId = 2,
                            WizardName = "Wizard-2"
                        },
                        new
                        {
                            WizardId = 3,
                            WizardName = "Wizard-3"
                        },
                        new
                        {
                            WizardId = 4,
                            WizardName = "Wizard-4"
                        },
                        new
                        {
                            WizardId = 5,
                            WizardName = "Wizard-5"
                        },
                        new
                        {
                            WizardId = 6,
                            WizardName = "Wizard-6"
                        },
                        new
                        {
                            WizardId = 7,
                            WizardName = "Wizard-7"
                        },
                        new
                        {
                            WizardId = 8,
                            WizardName = "Wizard-8"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
