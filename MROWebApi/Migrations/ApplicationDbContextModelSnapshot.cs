// <auto-generated />
using CodeFirstMigration.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MROWebApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MROPOC.Context.AdminUser", b =>
                {
                    b.Property<int>("AdminUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AdminUserId");

                    b.ToTable("AdminUser");

                    b.HasData(
                        new
                        {
                            AdminUserId = 1,
                            Email = "admin@razor-tech.com",
                            Password = "admin"
                        });
                });

            modelBuilder.Entity("MROWebAPI.Context.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ActiveStatus")
                        .HasColumnType("bit");

                    b.Property<string>("ConfigFileUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FTPPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FTPUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FTPUsername")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumOfInstitution")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SMTPPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SMTPUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SMTPUsername")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customer");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            ActiveStatus = true,
                            ConfigFileUrl = "https://www.cleveland.com/data",
                            CustomerAddress = "Cleveland",
                            CustomerName = "Cleveland Clinic",
                            Description = "Info about Cleveland",
                            FTPPassword = "Cleveland@101",
                            FTPUrl = "ftp://ftp.cleveland.com/",
                            FTPUsername = "Cleveland101",
                            NumOfInstitution = "Cleveland Clinic,Cleveland Hospital",
                            SMTPPassword = "Cleveland@101",
                            SMTPUrl = "smtp.cleveland.com",
                            SMTPUsername = "Cleveland101"
                        });
                });

            modelBuilder.Entity("MROWebAPI.Context.Field", b =>
                {
                    b.Property<int>("FieldId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FieldName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedFieldName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WizardId")
                        .HasColumnType("int");

                    b.HasKey("FieldId");

                    b.ToTable("Field");

                    b.HasData(
                        new
                        {
                            FieldId = 1,
                            FieldName = "Selected Location",
                            NormalizedFieldName = "SelectedLocation",
                            WizardId = 2
                        },
                        new
                        {
                            FieldId = 2,
                            FieldName = "Are you Patient",
                            NormalizedFieldName = "NotPatient",
                            WizardId = 3
                        },
                        new
                        {
                            FieldId = 3,
                            FieldName = "Email Id",
                            NormalizedFieldName = "EmailID",
                            WizardId = 4
                        },
                        new
                        {
                            FieldId = 4,
                            FieldName = "Confirm Report",
                            NormalizedFieldName = "ConfirmReport",
                            WizardId = 4
                        },
                        new
                        {
                            FieldId = 5,
                            FieldName = "First Name",
                            NormalizedFieldName = "FName",
                            WizardId = 5
                        },
                        new
                        {
                            FieldId = 6,
                            FieldName = "Middle Initial",
                            NormalizedFieldName = "MInitial",
                            WizardId = 5
                        },
                        new
                        {
                            FieldId = 7,
                            FieldName = "Last Name",
                            NormalizedFieldName = "LName",
                            WizardId = 5
                        },
                        new
                        {
                            FieldId = 8,
                            FieldName = "Is Patient Deceased",
                            NormalizedFieldName = "IsPatientDeceased",
                            WizardId = 5
                        },
                        new
                        {
                            FieldId = 9,
                            FieldName = "Postal Code",
                            NormalizedFieldName = "PostalCode",
                            WizardId = 6
                        },
                        new
                        {
                            FieldId = 10,
                            FieldName = "Street Area",
                            NormalizedFieldName = "StreetArea",
                            WizardId = 7
                        },
                        new
                        {
                            FieldId = 11,
                            FieldName = "Birth Date",
                            NormalizedFieldName = "BDay",
                            WizardId = 8
                        });
                });

            modelBuilder.Entity("MROWebAPI.Context.FieldCustomerMap", b =>
                {
                    b.Property<int>("FieldCustomerMapId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<int>("FieldId")
                        .HasColumnType("int");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("bit");

                    b.HasKey("FieldCustomerMapId");

                    b.ToTable("FieldCustomerMap");

                    b.HasData(
                        new
                        {
                            FieldCustomerMapId = 1,
                            CustomerId = 1,
                            FieldId = 1,
                            IsEnable = true
                        },
                        new
                        {
                            FieldCustomerMapId = 2,
                            CustomerId = 1,
                            FieldId = 2,
                            IsEnable = true
                        },
                        new
                        {
                            FieldCustomerMapId = 3,
                            CustomerId = 1,
                            FieldId = 3,
                            IsEnable = true
                        },
                        new
                        {
                            FieldCustomerMapId = 4,
                            CustomerId = 1,
                            FieldId = 4,
                            IsEnable = true
                        },
                        new
                        {
                            FieldCustomerMapId = 5,
                            CustomerId = 1,
                            FieldId = 5,
                            IsEnable = true
                        },
                        new
                        {
                            FieldCustomerMapId = 6,
                            CustomerId = 1,
                            FieldId = 6,
                            IsEnable = true
                        },
                        new
                        {
                            FieldCustomerMapId = 7,
                            CustomerId = 1,
                            FieldId = 7,
                            IsEnable = true
                        },
                        new
                        {
                            FieldCustomerMapId = 8,
                            CustomerId = 1,
                            FieldId = 8,
                            IsEnable = true
                        },
                        new
                        {
                            FieldCustomerMapId = 9,
                            CustomerId = 1,
                            FieldId = 9,
                            IsEnable = true
                        },
                        new
                        {
                            FieldCustomerMapId = 10,
                            CustomerId = 1,
                            FieldId = 10,
                            IsEnable = true
                        },
                        new
                        {
                            FieldCustomerMapId = 11,
                            CustomerId = 1,
                            FieldId = 11,
                            IsEnable = true
                        });
                });

            modelBuilder.Entity("MROWebAPI.Context.Wizard", b =>
                {
                    b.Property<int>("WizardId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("WizardName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("WizardId");

                    b.ToTable("Wizard");

                    b.HasData(
                        new
                        {
                            WizardId = 1,
                            WizardName = "Wizard-1"
                        },
                        new
                        {
                            WizardId = 2,
                            WizardName = "Wizard-2"
                        },
                        new
                        {
                            WizardId = 3,
                            WizardName = "Wizard-3"
                        },
                        new
                        {
                            WizardId = 4,
                            WizardName = "Wizard-4"
                        },
                        new
                        {
                            WizardId = 5,
                            WizardName = "Wizard-5"
                        },
                        new
                        {
                            WizardId = 6,
                            WizardName = "Wizard-6"
                        },
                        new
                        {
                            WizardId = 7,
                            WizardName = "Wizard-7"
                        },
                        new
                        {
                            WizardId = 8,
                            WizardName = "Wizard-8"
                        });
                });

            modelBuilder.Entity("MROWebAPI.Context.WizardCustomerMap", b =>
                {
                    b.Property<int>("WizardCustomerMapId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<bool>("IsEnable")
                        .HasColumnType("bit");

                    b.Property<int>("WizardId")
                        .HasColumnType("int");

                    b.HasKey("WizardCustomerMapId");

                    b.ToTable("WizardCustomerMap");

                    b.HasData(
                        new
                        {
                            WizardCustomerMapId = 1,
                            CustomerId = 1,
                            IsEnable = true,
                            WizardId = 1
                        },
                        new
                        {
                            WizardCustomerMapId = 2,
                            CustomerId = 1,
                            IsEnable = true,
                            WizardId = 2
                        },
                        new
                        {
                            WizardCustomerMapId = 3,
                            CustomerId = 1,
                            IsEnable = true,
                            WizardId = 3
                        },
                        new
                        {
                            WizardCustomerMapId = 4,
                            CustomerId = 1,
                            IsEnable = true,
                            WizardId = 4
                        },
                        new
                        {
                            WizardCustomerMapId = 5,
                            CustomerId = 1,
                            IsEnable = true,
                            WizardId = 5
                        },
                        new
                        {
                            WizardCustomerMapId = 6,
                            CustomerId = 1,
                            IsEnable = true,
                            WizardId = 6
                        },
                        new
                        {
                            WizardCustomerMapId = 7,
                            CustomerId = 1,
                            IsEnable = true,
                            WizardId = 7
                        },
                        new
                        {
                            WizardCustomerMapId = 8,
                            CustomerId = 1,
                            IsEnable = true,
                            WizardId = 8
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
